<?php

namespace app\models\DomainModel;

// make post prefixes and post title lengths configurable?

/**
 * This class encapsulates the business logic for a post. It is a subclass of
 * AbstractPost.
 *
 * @package  Blop/app/models/DomainModel
 * @author   Thomas Punt
 * @license  MIT
 */
class Post extends AbstractPost
{
    /**
     * @var string| $postTitle    The title of the post.
     * @var int|0   $postViews    The number of views the post has received.
     * @var array|  $comments     All Comment objects.
     */
    private $postTitle = '',
            $postViews = 0,
            $comments = [];

    /**
     * Validates and sets various attributes of a post.
     *
     * Posts will always have a title, body (even when viewing all posts, an excerpt will be shown),
     * and a creator ID. The post date, ID, and views attributes are optional because when creating a
     * new post, it won't have any of those attributes associated with it yet. The post date will be
     * generated by the NOW() function in the post INSERT query). The post ID will be generated upon
     * insertion of the post into the database. The view count will use the 0 default value when a new
     * post is being inserted into the database.
     *
     * @param  string   $postTitle       The title of the post.
     * @param  string   $postBody        The body of the post.
     * @param  int      $postCreatorID   The ID of the post creator.
     * @param  DateTime $postDate        The date the post was made.
     * @param  int      $postID          The ID of the post.
     * @param  int      $postViews       The view count of the post.
     * @throws InvalidArgumentException  Thrown if any fields contain invalid data.
     */
    public function __construct($postTitle, $postBody, $postCreatorID, \DateTime $postDate = null, $postID = null, $postViews = null)
    {
        parent::__construct($postBody);
        parent::setPostCreatorID($postCreatorID);

        $this->setPostTitle($postTitle);

        if(isset($postDate)) {
            parent::setPostDate($postDate);

            if(isset($postID)) {
                parent::setPostID($postID);

                if(isset($postViews))
                    $this->setPostViews($postViews);
            }
        }
    }

    /**
     * Validates and sets the post title.
     *
     * @param  string $postTitle         The title of the post.
     * @throws InvalidArgumentException  Thrown if the post title has an invalid length.
     */
    private function setPostTitle($postTitle)
    {
        $postTitleLength = strlen($postTitle);

        if($postTitleLength < 5 || $postTitleLength > 100)
            throw new \InvalidArgumentException('Invalid post title length.');

        $this->postTitle = $postTitle;
    }

    /**
     * Sets the post view count to an instance variable.
     *
     * This value should only ever come from the database, and so not validations are required.
     *
     * @param  int $views  The number of views the post has received.
     */
    private function setPostViews($views)
    {
        $this->postViews = $views;
    }

    /**
     * Adds a Comment object to the comments instance variable.
     *
     * @param Comment $comment  A Comment object containing all information about a comment.
     */
    public function addReplyPost(Comment $comment)
    {
        array_push($this->comments, $comment);
    }

    use MagicGetter;
}